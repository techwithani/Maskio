{
  "version": 3,
  "sources": ["../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/gfx.ts", "../node_modules/kaboom/src/app.ts", "../node_modules/kaboom/src/audio.ts", "../node_modules/kaboom/src/assets.ts", "../node_modules/kaboom/src/logger.ts", "../node_modules/kaboom/src/net.ts", "../node_modules/kaboom/src/kaboom.ts", "../code/main.js"],
  "sourcesContent": ["function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nfunction rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args): Vec2 {\n\n\tif (args.length === 0) {\n\t\treturn vec2(0, 0);\n\t}\n\n\tif (args.length === 1) {\n\t\tif (typeof args[0] === \"number\") {\n\t\t\treturn vec2(args[0], args[0]);\n\t\t} else if (isVec2(args[0])) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tx: args[0],\n\t\ty: args[1],\n\t\tclone() {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(s) {\n\t\t\treturn vec2(this.x * s, this.y * s);\n\t\t},\n\t\tdist(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen() {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit() {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal() {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x * p2.x, this.y * p2.y);\n\t\t},\n\t\tangle(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.atan2(this.y - p2.y, this.x - p2.x);\n\t\t},\n\t\tlerp(p2, t) {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\teq(other) {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr() {\n\t\t\treturn `(${this.x}, ${this.y})`;\n\t\t},\n\t};\n}\n\nfunction vec2FromAngle(a: number): Vec2 {\n\treturn vec2(Math.cos(a), Math.sin(a));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy() {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t;\n}\n\nfunction isVec3(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t&& p.z !== undefined\n\t\t;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined\n\t\t&& c.r !== undefined\n\t\t&& c.g !== undefined\n\t\t&& c.b !== undefined\n\t\t&& c.a !== undefined\n\t\t;\n}\n\nfunction isMat4(m: any): Mat4 {\n\tif (\n\t\tm !== undefined\n\t\t&& Array.isArray(m.m)\n\t\t&& m.m.length === 16\n\t) {\n\t\treturn m;\n\t}\n}\n\nfunction rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn rgba();\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgba(args[0]);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn rgb.apply(null, args[0])\n\t\t}\n\t}\n\treturn rgba(args[0], args[1], args[2], 1);\n}\n\nfunction rgba(...args): Color {\n\n\tif (args.length === 0) {\n\t\treturn rgba(1, 1, 1, 1);\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgba(args[0].r, args[0].g, args[0].b, args[0].a);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 4) {\n\t\t\treturn rgba.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tr: args[0],\n\t\tg: args[1],\n\t\tb: args[2],\n\t\ta: args[3] ?? 1,\n\t\tclone(): Color {\n\t\t\treturn rgba(this.r, this.g, this.b, this.a);\n\t\t},\n\t\tlighten(a): Color {\n\t\t\treturn rgba(this.r + a, this.g + a, this.b + a, this.a);\n\t\t},\n\t\tdarken(a: number): Color {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\tinvert(): Color {\n\t\t\treturn rgba(1 - this.r, 1 - this.g, 1 - this.b, this.a);\n\t\t},\n\t\tisDark(p: number = 0.5): boolean {\n\t\t\treturn this.r + this.g + this.b < 3 * p;\n\t\t},\n\t\tisLight(p: number = 0.5): boolean {\n\t\t\treturn this.r + this.g + this.b > 3 * p;\n\t\t},\n\t\teq(other: Color): boolean {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.g\n\t\t\t\t&& this.a === other.a;\n\t\t},\n\t};\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tw: w,\n\t\th: h,\n\t\tclone() {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other) {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, -Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\tMath.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\n// easy sine wave\nfunction wave(lo: number, hi: number, t: number): number {\n\treturn lo + (Math.sin(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\nconst defRNG = makeRng(Date.now());\n\nfunction makeRng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(...args) {\n\t\t\tif (args.length === 0) {\n\t\t\t\t// generate 0 - 1\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else if (args.length === 1) {\n\t\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t\t} else if (isVec2(args[0])) {\n\t\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t\t} else if (isColor(args[0])) {\n\t\t\t\t\treturn this.gen(rgba(0, 0, 0, 0), args[0]);\n\t\t\t\t}\n\t\t\t} else if (args.length === 2) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.gen() * (args[1] - args[0]) + args[0];\n\t\t\t\t} else if (isVec2(args[0]) && isVec2(args[1])) {\n\t\t\t\t\treturn vec2(\n\t\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t\t);\n\t\t\t\t} else if (isColor(args[0]) && isColor(args[1])) {\n\t\t\t\t\treturn rgba(\n\t\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t\t\tthis.gen(args[0].a, args[1].a),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed: number) {\n\tdefRNG.seed = seed;\n}\n\nfunction rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\nfunction chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[Math.floor(rand(list.length))];\n}\n\nfunction colRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction overlapRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\nfunction colLineLine(l1: Line, l2: Line): boolean {\n\tconst a =\n\t\t(\n\t\t\t(l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p1.y - l2.p1.y)\n\t\t\t- (l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p1.x - l2.p1.x)\n\t\t)\n\t\t/\n\t\t(\n\t\t\t(l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p2.x - l1.p1.x)\n\t\t\t- (l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p2.y - l1.p1.y)\n\t\t);\n\tconst b =\n\t\t(\n\t\t\t(l1.p2.x - l1.p1.x)\n\t\t\t* (l1.p1.y - l2.p1.y)\n\t\t\t- (l1.p2.y - l1.p1.y)\n\t\t\t* (l1.p1.x - l2.p1.x)\n\t\t)\n\t\t/\n\t\t(\n\t\t\t(l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p2.x - l1.p1.x)\n\t\t\t- (l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p2.y - l1.p1.y)\n\t\t);\n\treturn a >= 0.0 && a <= 1.0 && b >= 0.0 && b <= 1.0;\n}\n\nfunction colRectLine(r: Rect, l: Line): boolean {\n\tif (colRectPt(r, l.p1) || colRectPt(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn colLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| colLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| colLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| colLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction colRectPt(r: Rect, pt: Vec2): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y < r.p2.y;\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgba,\n\trgb,\n\tmakeRng,\n\trand,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\tcolRectRect,\n\toverlapRectRect,\n\tcolLineLine,\n\tcolRectLine,\n\tcolRectPt,\n\tvec2FromAngle,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n};\n", "function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nexport {\n\tdeepEq,\n};\n", "import {\n\tvec2,\n\tvec3,\n\tquad,\n\trgba,\n\tmat4,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n} from \"./math\";\n\nimport {\n\tdeepEq,\n} from \"./utils\";\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tclearColor: Color,\n\tdefProg: GfxProgram,\n\tcurProg: GfxProgram,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\tbgTex: GfxTexture,\n\tcurUniform: Uniform,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n\tdrawCalls: number,\n\tlastDrawCalls: number,\n};\n\ntype GfxConf = {\n\tclearColor?: Color,\n\tscale?: number,\n\ttexFilter?: TexFilter,\n};\n\ntype Gfx = {\n\twidth(): number,\n\theight(): number,\n\tscale(): number,\n\tclearColor(): Color,\n\tmakeTex(data: GfxTextureData): GfxTexture,\n\tmakeProgram(vert: string, frag: string): GfxProgram,\n\tmakeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont,\n\tdrawTexture(\n\t\ttex: GfxTexture,\n\t\tconf?: DrawTextureConf,\n\t): void,\n\tdrawText(\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf?: DrawTextConf,\n\t): void,\n\tdrawFmtText(ftext: FormattedText): void,\n\tfmtText(\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf?: DrawTextConf,\n\t): FormattedText,\n\tdrawRect(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf?: DrawRectConf,\n\t): void,\n\tdrawRectStroke(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf?: DrawRectStrokeConf,\n\t): void,\n\tdrawLine(\n\t\tp1: Vec2,\n\t\tp2: Vec2,\n\t\tconf?: DrawLineConf,\n\t): void,\n\tframeStart(): void,\n\tframeEnd(): void,\n\tpushTransform(): void,\n\tpopTransform(): void,\n\tpushMatrix(m: Mat4): void,\n\tdrawCalls(): number,\n};\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction gfxInit(gl: WebGLRenderingContext, gconf: GfxConf): Gfx {\n\n\tconst texFilter = (() => {\n\t\tswitch (gconf.texFilter) {\n\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\tdefault: return gl.NEAREST;\n\t\t}\n\t})();\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defProg = makeProgram(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gconf.clearColor ?? rgba(0, 0, 0, 1);\n\n\t\tgl.clearColor(c.r, c.g, c.b, c.a);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tconst bgTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2)\n\t\t);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tlastDrawCalls: 0,\n\t\t\tdefProg: defProg,\n\t\t\tcurProg: defProg,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t\tclearColor: c,\n\t\t\tbgTex: bgTex,\n\t\t};\n\n\t})();\n\n\tframeStart();\n\tframeEnd();\n\n\tfunction powerOfTwo(n) {\n\t\treturn (Math.log(n) / Math.log(2)) % 1 === 0;\n\t}\n\n\tfunction makeTex(data: GfxTextureData): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, texFilter);\n\n\t\tconst wrap = (() => {\n\t\t\tif (powerOfTwo(data.width) && powerOfTwo(data.height)) {\n\t\t\t\treturn gl.REPEAT;\n\t\t\t} else {\n\t\t\t\treturn gl.CLAMP_TO_EDGE;\n\t\t\t}\n\t\t})();\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeProgram(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxProgram {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\t\tif (msg !== \"\\n\") {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tthis.bind();\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name];\n\t\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t\t} else if (isMat4(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t\t} else if (isColor(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t\t} else if (isVec3(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t\t} else if (isVec2(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.unbind();\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tprog: GfxProgram = gfx.defProg,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tprog = prog ?? gfx.defProg;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| prog !== gfx.curProg\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curProg = prog;\n\t\tgfx.curUniform = uniform;\n\n\t\tconst nIndices = indices\n\t\t\t.map((i) => {\n\t\t\t\treturn i + gfx.vqueue.length / STRIDE;\n\t\t\t});\n\n\t\tconst nVerts = verts\n\t\t\t.map((v) => {\n\t\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\t\treturn [\n\t\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\t\tv.color.r, v.color.g, v.color.b, v.color.a\n\t\t\t\t];\n\t\t\t})\n\t\t\t.flat();\n\n\t\tnIndices.forEach((i) => gfx.iqueue.push(i));\n\t\tnVerts.forEach((v) => gfx.vqueue.push(v));\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curProg\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.curProg.send(gfx.curUniform);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curProg.bind();\n\t\tgfx.curProg.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curProg.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tif (!gconf.clearColor) {\n\t\t\tdrawQuad({\n\t\t\t\twidth: width(),\n\t\t\t\theight: height(),\n\t\t\t\tquad: quad(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth() * scale() / BG_GRID_SIZE,\n\t\t\t\t\theight() * scale() / BG_GRID_SIZE,\n\t\t\t\t),\n\t\t\t\ttex: gfx.bgTex,\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t\tgfx.lastDrawCalls = gfx.drawCalls;\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.lastDrawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\t// TODO: don't use push as prefix for these\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(p: Vec2) {\n\t\tif (!p || (p.x === 0 && p.y === 0)) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(p: Vec2) {\n\t\tif (!p || (p.x === 1 && p.y === 1)) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// TODO: clean\n\t// draw a textured quad\n\tfunction drawQuad(conf: DrawQuadConf = {}) {\n\n\t\tconst w = conf.width || 0;\n\t\tconst h = conf.height || 0;\n\t\tconst pos = conf.pos || vec2(0, 0);\n\t\tconst origin = originPt(conf.origin || DEF_ORIGIN);\n\t\tconst offset = origin.dot(vec2(w, h).scale(-0.5));\n\t\tconst scale = vec2(conf.scale ?? 1);\n\t\tconst rot = conf.rot || 0;\n\t\tconst q = conf.quad || quad(0, 0, 1, 1);\n\t\tconst z = 1 - (conf.z ?? 0);\n\t\tconst color = conf.color || rgba(1, 1, 1, 1);\n\n\t\tpushTransform();\n\t\tpushTranslate(pos);\n\t\tpushScale(scale);\n\t\tpushRotateZ(rot);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, z),\n\t\t\t\tuv: vec2(q.x, q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, z),\n\t\t\t\tuv: vec2(q.x, q.y),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, z),\n\t\t\t\tuv: vec2(q.x + q.w, q.y),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, z),\n\t\t\t\tuv: vec2(q.x + q.w, q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], conf.tex, conf.prog, conf.uniform);\n\n\t\tpopTransform();\n\n\t}\n\n\tfunction drawTexture(\n\t\ttex: GfxTexture,\n\t\tconf: DrawTextureConf = {},\n\t) {\n\n\t\tconst q = conf.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = tex.width * q.w;\n\t\tconst h = tex.height * q.h;\n\n\t\tdrawQuad({\n\t\t\t...conf,\n\t\t\ttex: tex,\n\t\t\tquad: q,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n\tfunction drawRect(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf: DrawRectConf = {}\n\t) {\n\t\tdrawQuad({\n\t\t\t...conf,\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\t}\n\n\tfunction drawRectStroke(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf: DrawRectStrokeConf = {}\n\t) {\n\n\t\tconst offset = originPt(conf.origin || DEF_ORIGIN).dot(vec2(w, h)).scale(0.5);\n\t\tconst p1 = pos.add(vec2(-w / 2, -h / 2)).sub(offset);\n\t\tconst p2 = pos.add(vec2(-w / 2,  h / 2)).sub(offset);\n\t\tconst p3 = pos.add(vec2( w / 2,  h / 2)).sub(offset);\n\t\tconst p4 = pos.add(vec2( w / 2, -h / 2)).sub(offset);\n\n\t\tdrawLine(p1, p2, conf);\n\t\tdrawLine(p2, p3, conf);\n\t\tdrawLine(p3, p4, conf);\n\t\tdrawLine(p4, p1, conf);\n\n\t}\n\n\tfunction drawLine(\n\t\tp1: Vec2,\n\t\tp2: Vec2,\n\t\tconf: DrawLineConf = {},\n\t) {\n\n\t\tconst w = conf.width || 1;\n\t\tconst h = p1.dist(p2);\n\t\tconst rot = Math.PI / 2 - p1.angle(p2);\n\n\t\tdrawQuad({\n\t\t\t...conf,\n\t\t\tpos: p1.add(p2).scale(0.5),\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\trot: rot,\n\t\t\torigin: \"center\",\n\t\t});\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(\n\t\ttext: string,\n\t\tfont: GfxFont,\n\t\tconf: DrawTextConf = {}\n\t): FormattedText {\n\n\t\tconst chars = (text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = conf.size || gh;\n\t\tconst scale = vec2(size / gh).dot(vec2(conf.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [[]];\n\n\t\t// check new lines and calc area size\n\t\tfor (const char of chars) {\n\t\t\t// go new line if \\n or exceeds wrap value\n\t\t\tif (char === \"\\n\" || (conf.width ? (curX + cw > conf.width) : false)) {\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tflines.push([]);\n\t\t\t}\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tflines[flines.length - 1].push(char);\n\t\t\t\tcurX += cw;\n\t\t\t}\n\t\t\ttw = Math.max(tw, curX);\n\t\t}\n\n\t\tif (conf.width) {\n\t\t\ttw = conf.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(conf.pos || 0);\n\t\tconst offset = originPt(conf.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tfchars.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\tcolor: conf.color,\n\t\t\t\t\t\torigin: conf.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t\tz: conf.z,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf = {},\n\t) {\n\t\tdrawFmtText(fmtText(txt, font, conf));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tcolor: ch.color,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t\tz: ch.z,\n\t\t\t});\n\t\t}\n\t}\n\n\t// get current canvas width\n\tfunction width(): number {\n\t\treturn gl.drawingBufferWidth / scale();\n\t}\n\n\t// get current canvas height\n\tfunction height(): number {\n\t\treturn gl.drawingBufferHeight / scale();\n\t}\n\n\tfunction scale(): number {\n\t\treturn gconf.scale ?? 1;\n\t}\n\n\tfunction clearColor(): Color {\n\t\treturn gfx.clearColor.clone();\n\t}\n\n\t// TODO: type this\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeProgram,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawRectStroke,\n\t\tdrawLine,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushMatrix,\n\t\tdrawCalls,\n\t\tclearColor,\n\t};\n\n}\n\nexport {\n\tGfx,\n\toriginPt,\n\tgfxInit,\n};\n", "import {\n\tvec2,\n} from \"./math\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppConf = {\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\tfullscreen?: boolean,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseState: ButtonState,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n\tfps: number,\n\tfpsBuf: number[],\n\tfpsTimer: number,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos(): Vec2,\n\tkeyDown(k: string): boolean,\n\tkeyPressed(k: string): boolean,\n\tkeyPressedRep(k: string): boolean,\n\tkeyReleased(k: string): boolean,\n\tmouseDown(): boolean,\n\tmouseClicked(): boolean,\n\tmouseReleased(): boolean,\n\tcharInputted(): string[],\n\tcursor(c?: string): void,\n\tdt(): number,\n\tfps(): number,\n\ttime(): number,\n\tscreenshot(): string,\n\trun(f: () => void): void,\n\tquit(): void,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction appInit(gconf: AppConf = {}): App {\n\n\tconst app: AppCtx = {\n\t\tcanvas: gconf.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t(gconf.root ?? document.body).appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tmouseState: \"up\",\n\t\tmousePos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gconf.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t\tfps: 0,\n\t\tfpsBuf: [],\n\t\tfpsTimer: 0,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t];\n\n\tif (gconf.fullscreen) {\n\t\tapp.canvas.width = window.innerWidth;\n\t\tapp.canvas.height = window.innerHeight;\n\t} else {\n\t\tapp.canvas.width = (gconf.width || 640) * app.scale;\n\t\tapp.canvas.height = (gconf.height || 480) * app.scale;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gconf.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// @ts-ignore\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) ||\n\t\t(navigator.maxTouchPoints > 0) ||\n\t\t(navigator.msMaxTouchPoints > 0);\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t});\n\n\tapp.canvas.addEventListener(\"mousedown\", () => {\n\t\tapp.mouseState = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", () => {\n\t\tapp.mouseState = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseState = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(k);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.focus();\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n//  \t\t\t\taudio.ctx().resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n//  \t\t\t\taudio.ctx().suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseClicked(): boolean {\n\t\treturn app.mouseState === \"pressed\";\n\t}\n\n\tfunction mouseDown(): boolean {\n\t\treturn app.mouseState === \"pressed\" || app.mouseState === \"down\";\n\t}\n\n\tfunction mouseReleased(): boolean {\n\t\treturn app.mouseState === \"released\";\n\t}\n\n\tfunction keyPressed(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\";\n\t}\n\n\tfunction keyPressedRep(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t}\n\n\tfunction keyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction keyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\tfunction fps(): number {\n\t\treturn app.fps;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\tfunction cursor(c?: string) {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c ?? \"default\";\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t\tapp.fpsBuf.push(1 / app.dt);\n\t\t\t\tapp.fpsTimer += app.dt;\n\t\t\t\tif (app.fpsTimer >= 1) {\n\t\t\t\t\tapp.fpsTimer = 0;\n\t\t\t\t\tapp.fps = Math.round(app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length);\n\t\t\t\t\tapp.fpsBuf = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tapp.mouseState = processBtnState(app.mouseState);\n\t\t\tapp.charInputted = [];\n\n\t\t\tif (!app.stopped) {\n\t\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\t}\n\n\t\t};\n\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tkeyDown,\n\t\tkeyPressed,\n\t\tkeyPressedRep,\n\t\tkeyReleased,\n\t\tmouseDown,\n\t\tmouseClicked,\n\t\tmouseReleased,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tfps,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n", "import {\n\tclamp,\n} from \"./math\";\n\ntype AudioCtx = {\n\tctx: AudioContext,\n\tgainNode: GainNode,\n\tmasterNode: AudioNode,\n};\n\ntype Audio = {\n\tctx(): AudioContext,\n\tvolume(v: number): number,\n\tplay(sound: AudioBuffer, conf?: AudioPlayConf): AudioPlay,\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\nfunction audioInit(): Audio {\n\n\tconst audio: AudioCtx = (() => {\n\n\t\t// @ts-ignore\n\t\tconst ctx = new (window.AudioContext || window.webkitAudioContext)();\n\t\tconst gainNode = ctx.createGain();\n\t\tconst masterNode = gainNode;\n\n\t\tmasterNode.connect(ctx.destination);\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tgainNode,\n\t\t\tmasterNode,\n\t\t};\n\n\t})();\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.gainNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t\t}\n\t\treturn audio.gainNode.gain.value;\n\t}\n\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsound: AudioBuffer,\n\t\tconf: AudioPlayConf = {\n\t\t\tloop: false,\n\t\t\tvolume: 1,\n\t\t\tspeed: 1,\n\t\t\tdetune: 0,\n\t\t\tseek: 0,\n\t\t},\n\t): AudioPlay {\n\n\t\tlet stopped = false;\n\t\tlet srcNode = audio.ctx.createBufferSource();\n\n\t\tsrcNode.buffer = sound;\n\t\tsrcNode.loop = conf.loop ? true : false;\n\n\t\tconst gainNode = audio.ctx.createGain();\n\n\t\tsrcNode.connect(gainNode);\n\t\tgainNode.connect(audio.masterNode);\n\n\t\tconst pos = conf.seek ?? 0;\n\n\t\tsrcNode.start(0, pos);\n\n\t\tlet startTime = audio.ctx.currentTime - pos;\n\t\tlet stopTime: number | null = null;\n\n\t\tconst handle = {\n\n\t\t\tstop() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.pause();\n\t\t\t\tstartTime = audio.ctx.currentTime;\n\t\t\t},\n\n\t\t\tplay(seek?: number) {\n\n\t\t\t\tif (!stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldNode = srcNode;\n\n\t\t\t\tsrcNode = audio.ctx.createBufferSource();\n\t\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\t\tif (srcNode.detune) {\n\t\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t\t}\n\n\t\t\t\tsrcNode.connect(gainNode);\n\n\t\t\t\tconst pos = seek ?? this.time();\n\n\t\t\t\tsrcNode.start(0, pos);\n\t\t\t\tstartTime = audio.ctx.currentTime - pos;\n\t\t\t\tstopped = false;\n\t\t\t\tstopTime = null;\n\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsrcNode.stop();\n\t\t\t\tstopped = true;\n\t\t\t\tstopTime = audio.ctx.currentTime;\n\t\t\t},\n\n\t\t\tpaused(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tstopped(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tspeed(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t\t}\n\t\t\t\treturn srcNode.playbackRate.value;\n\t\t\t},\n\n\t\t\tdetune(val?: number): number {\n\t\t\t\tif (!srcNode.detune) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t\t}\n\t\t\t\treturn srcNode.detune.value;\n\t\t\t},\n\n\t\t\tvolume(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t\t}\n\t\t\t\treturn gainNode.gain.value;\n\t\t\t},\n\n\t\t\tloop() {\n\t\t\t\tsrcNode.loop = true;\n\t\t\t},\n\n\t\t\tunloop() {\n\t\t\t\tsrcNode.loop = false;\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn sound.duration;\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn stopTime - startTime;\n\t\t\t\t} else {\n\t\t\t\t\treturn audio.ctx.currentTime - startTime;\n\t\t\t\t}\n\t\t\t},\n\n\t\t};\n\n\t\thandle.speed(conf.speed);\n\t\thandle.detune(conf.detune);\n\t\thandle.volume(conf.volume);\n\n\t\treturn handle;\n\n\t}\n\n\tfunction ctx(): AudioContext {\n\t\treturn audio.ctx;\n\t}\n\n\treturn {\n\t\tctx,\n\t\tvolume,\n\t\tplay,\n\t};\n\n}\n\nexport {\n\tAudio,\n\taudioInit,\n};\n", "import {\n\tquad,\n} from \"./math\";\n\nimport {\n\tAudio,\n} from \"./audio\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\n// @ts-ignore\nimport unsciiSrc from \"./assets/unscii_8x8.png\";\n\ntype AssetsConf = {\n\terrHandler?: (err: string) => void,\n};\n\ntype LoaderID = number;\n\ntype AssetsCtx = {\n\tlastLoaderID: LoaderID,\n\tloadRoot: string,\n\tloaders: Record<number, boolean>,\n\tsprites: Record<string, SpriteData>,\n\tsounds: Record<string, SoundData>,\n\tfonts: Record<string, FontData>,\n\tshaders: Record<string, ShaderData>,\n};\n\ntype Assets = {\n\tloadRoot(path: string): string,\n\tloadSprite(\n\t\tname: string,\n\t\tsrc: SpriteLoadSrc,\n\t\tconf?: SpriteLoadConf,\n\t): Promise<SpriteData>,\n\tloadSound(\n\t\tname: string,\n\t\tsrc: string,\n\t): Promise<SoundData>,\n\tloadFont(\n\t\tname: string,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars?: string,\n\t): Promise<FontData>,\n\tloadShader(\n\t\tname: string,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl?: boolean,\n\t): Promise<ShaderData>,\n\tloadProgress(): number,\n\taddLoader<T>(prom: Promise<T>): void,\n\tdefFont(): FontData,\n\tsprites: Record<string, SpriteData>,\n\tfonts: Record<string, FontData>,\n\tsounds: Record<string, SoundData>,\n\tshaders: Record<string, ShaderData>,\n};\n\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst DEF_FONT = \"unscii\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\treject(`failed to load ${src}`);\n\t\t};\n\t});\n}\n\nfunction isDataUrl(src: string): boolean {\n\treturn src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gconf: AssetsConf = {}): Assets {\n\n\tconst assets: AssetsCtx = {\n\t\tlastLoaderID: 0,\n\t\tloadRoot: \"\",\n\t\tloaders: {},\n\t\tsprites: {},\n\t\tsounds: {},\n\t\tfonts: {},\n\t\tshaders: {},\n\t};\n\n\tfunction addLoader<T>(prom: Promise<T>) {\n\t\tconst id = assets.lastLoaderID;\n\t\tassets.loaders[id] = false;\n\t\tassets.lastLoaderID++;\n\t\tprom\n\t\t\t.catch(gconf.errHandler ?? console.error)\n\t\t\t.finally(() => {\n\t\t\t\tassets.loaders[id] = true;\n\t\t\t});\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\n\t\tlet total = 0;\n\t\tlet loaded = 0;\n\n\t\tfor (const id in assets.loaders) {\n\t\t\ttotal += 1;\n\t\t\tif (assets.loaders[id]) {\n\t\t\t\tloaded += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn loaded / total;\n\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path: string): string {\n\t\tif (path) {\n\t\t\tassets.loadRoot = path;\n\t\t}\n\t\treturn assets.loadRoot;\n\t}\n\n\t// load a bitmap font to asset manager\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string = ASCII_CHARS,\n\t): Promise<FontData> {\n\n\t\tconst loader = new Promise<FontData>((resolve, reject) => {\n\n\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\n\t\t\tloadImg(path)\n\t\t\t\t.then((img) => {\n\t\t\t\t\tconst font = gfx.makeFont(gfx.makeTex(img), gw, gh, chars);\n\t\t\t\t\tassets.fonts[name] = font;\n\t\t\t\t\tresolve(font);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\t// TODO: use getSprite() functions for async settings\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string,\n\t\tsrc: SpriteLoadSrc,\n\t\tconf: SpriteLoadConf = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Promise<SpriteData> {\n\n\t\t// synchronously load sprite from local pixel data\n\t\tfunction loadRawSprite(\n\t\t\tname: string,\n\t\t\tsrc: GfxTextureData,\n\t\t\tconf: SpriteLoadConf = {\n\t\t\t\tsliceX: 1,\n\t\t\t\tsliceY: 1,\n\t\t\t\tgridWidth: 0,\n\t\t\t\tgridHeight: 0,\n\t\t\t\tanims: {},\n\t\t\t},\n\t\t) {\n\n\t\t\tconst frames = [];\n\t\t\tconst tex = gfx.makeTex(src);\n\t\t\tconst sliceX = conf.sliceX || tex.width / (conf.gridWidth || tex.width);\n\t\t\tconst sliceY = conf.sliceY || tex.height / (conf.gridHeight || tex.height);\n\t\t\tconst qw = 1 / sliceX;\n\t\t\tconst qh = 1 / sliceY;\n\n\t\t\tfor (let j = 0; j < sliceY; j++) {\n\t\t\t\tfor (let i = 0; i < sliceX; i++) {\n\t\t\t\t\tframes.push(quad(\n\t\t\t\t\t\ti * qw,\n\t\t\t\t\t\tj * qh,\n\t\t\t\t\t\tqw,\n\t\t\t\t\t\tqh,\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sprite = {\n\t\t\t\ttex: tex,\n\t\t\t\tframes: frames,\n\t\t\t\tanims: conf.anims || {},\n\t\t\t};\n\n\t\t\tassets.sprites[name] = sprite;\n\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\tconst loader = new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sprite src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\t\tloadImg(path)\n\t\t\t\t\t.then((img) => {\n\t\t\t\t\t\tresolve(loadRawSprite(name, img, conf));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\tresolve(loadRawSprite(name, src, conf));\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl: boolean = false,\n\t): Promise<ShaderData> {\n\n\t\tfunction loadRawShader(\n\t\t\tname: string,\n\t\t\tvert: string | null,\n\t\t\tfrag: string | null,\n\t\t): ShaderData {\n\t\t\tconst shader = gfx.makeProgram(vert, frag);\n\t\t\tassets.shaders[name] = shader;\n\t\t\treturn shader;\n\t\t}\n\n\t\tconst loader = new Promise<ShaderData>((resolve, reject) => {\n\n\t\t\tif (!vert && !frag) {\n\t\t\t\treturn reject(\"no shader\");\n\t\t\t}\n\n\t\t\tfunction resolveUrl(url?: string) {\n\t\t\t\treturn url ?\n\t\t\t\t\tfetch(assets.loadRoot + url)\n\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\tif (r.ok) {\n\t\t\t\t\t\t\t\treturn r.text();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t: new Promise((r) => r(null));\n\t\t\t}\n\n\t\t\tif (isUrl) {\n\n\t\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string,\n\t\tsrc: string,\n\t): Promise<SoundData> {\n\n\t\tconst url = assets.loadRoot + src;\n\n\t\tconst loader = new Promise<SoundData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\n\t\t\t\tfetch(url)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\treturn res.arrayBuffer();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\treturn new Promise((resolve2, reject2) => {\n\t\t\t\t\t\t\taudio.ctx().decodeAudioData(data, resolve2, reject2);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\t\tassets.sounds[name] = buf;\n\t\t\t\t\t\tresolve(buf);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\tfunction defFont(): FontData {\n\t\treturn assets.fonts[DEF_FONT];\n\t}\n\n\t// default font unscii http://pelulamu.net/unscii/\n\tloadFont(\n\t\tDEF_FONT,\n\t\tunsciiSrc,\n\t\t8,\n\t\t8\n\t);\n\n\treturn {\n\t\tloadRoot,\n\t\tloadSprite,\n\t\tloadSound,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadProgress,\n\t\taddLoader,\n\t\tdefFont,\n\t\tsprites: assets.sprites,\n\t\tfonts: assets.fonts,\n\t\tsounds: assets.sounds,\n\t\tshaders: assets.shaders,\n\t};\n\n}\n\nexport {\n\tAssetsConf,\n\tAssets,\n\tassetsInit,\n\tDEF_FONT,\n};\n", "import {\n\tvec2,\n\trgba,\n\tmap,\n} from \"./math\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerConf = {\n\tmax?: number,\n};\n\ntype Logger = {\n\tdraw(): void,\n\tinfo(msg: string): void,\n\terror(msg: string): void,\n\tclear(): void,\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, conf: LoggerConf = {\n\tmax: 8,\n}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = conf.max ?? 8;\n\n\t// TODO: draw rects first to reduce draw calls\n\t// TODO: make log and progress bar fixed size independent of global scale\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst txtAlpha = map(i, 0, max, 1, 0.5);\n\t\t\tconst bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgba(1, 1, 1, txtAlpha);\n\t\t\t\t\tcase \"error\": return rgba(1, 0, 0.5, txtAlpha);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText(log.msg, assets.defFont(), {\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t});\n\n\t\t\tgfx.drawRect(pos, ftext.width, ftext.height, {\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgba(0, 0, 0, bgAlpha),\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tconsole.error(msg);\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n", "type Net = {\n\tconnect(): Promise<WebSocket>,\n\tclose(): void,\n\tconnected(): boolean,\n\trecv(type: string, handler: MsgHandler): void,\n\tsend(type: string, data: any): void,\n};\n\nfunction netInit(url: string): Net {\n\n\tconst handlers: Record<string, MsgHandler[]> = {};\n\tconst sendQueue: string[] = [];\n\n\tlet socket: WebSocket | null = null;\n\n\tfunction connected(): boolean {\n\t\treturn socket !== null && socket.readyState === 1;\n\t}\n\n\tfunction connect(): Promise<WebSocket> {\n\n\t\tconst ws = new WebSocket(url);\n\n\t\treturn new Promise<WebSocket>((resolve, reject) => {\n\n\t\t\tws.onopen = () => {\n\t\t\t\tresolve(ws);\n\t\t\t\tsocket = ws;\n\t\t\t\tfor (const msg of sendQueue) {\n\t\t\t\t\tws.send(msg);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tws.onerror = () => {\n\t\t\t\treject(`failed to connect to ${url}`)\n\t\t\t};\n\n\t\t\tws.onmessage = (e) => {\n\t\t\t\tconst msg = JSON.parse(e.data);\n\t\t\t\tif (handlers[msg.type]) {\n\t\t\t\t\tfor (const handler of handlers[msg.type]) {\n\t\t\t\t\t\thandler(msg.data, msg.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t});\n\n\t}\n\n\tfunction recv(type: string, handler: MsgHandler) {\n\t\tif (!handlers[type]) {\n\t\t\thandlers[type] = [];\n\t\t}\n\t\thandlers[type].push(handler);\n\t}\n\n\tfunction send(type: string, data: any) {\n\t\tconst msg = JSON.stringify({\n\t\t\ttype: type,\n\t\t\tdata: data,\n\t\t});\n\t\tif (socket) {\n\t\t\tsocket.send(msg);\n\t\t} else {\n\t\t\tsendQueue.push(msg)\n\t\t}\n\t}\n\n\tfunction close() {\n\t\tif (socket) {\n\t\t\tsocket.close();\n\t\t}\n\t}\n\n\treturn {\n\t\tconnect,\n\t\tclose,\n\t\tconnected,\n\t\trecv,\n\t\tsend,\n\t};\n\n}\n\nexport {\n\tNet,\n\tnetInit,\n};\n", "import {\n\tvec2,\n\tmat4,\n\tquad,\n\trgba,\n\trgb,\n\tmakeRng,\n\trand,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tcolRectRect,\n\toverlapRectRect,\n\tcolRectPt,\n\tvec2FromAngle,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\";\n\nimport {\n\toriginPt,\n\tgfxInit,\n} from \"./gfx\";\n\nimport {\n\tappInit,\n} from \"./app\";\n\nimport {\n\taudioInit,\n} from \"./audio\";\n\nimport {\n\tassetsInit,\n\tDEF_FONT,\n} from \"./assets\";\n\nimport {\n\tloggerInit,\n} from \"./logger\";\n\nimport {\n\tNet,\n\tnetInit,\n} from \"./net\";\n\ntype TimerID = number;\n\n// @ts-ignore\nmodule.exports = (gconf: KaboomConf = {\n\twidth: 640,\n\theight: 480,\n\tscale: 1,\n\tfullscreen: false,\n\tdebug: false,\n\tcrisp: false,\n\tcanvas: null,\n\tconnect: null,\n\tlogMax: 8,\n\troot: document.body,\n}): KaboomCtx => {\n\nconst app = appInit({\n\twidth: gconf.width,\n\theight: gconf.height,\n\tscale: gconf.scale,\n\tfullscreen: gconf.fullscreen,\n\tcrisp: gconf.crisp,\n\tcanvas: gconf.canvas,\n\troot: gconf.root,\n});\n\nconst gfx = gfxInit(app.gl, {\n\tclearColor: gconf.clearColor ? rgba(gconf.clearColor) : undefined,\n\tscale: gconf.scale,\n\ttexFilter: gconf.texFilter,\n});\n\nconst audio = audioInit();\nconst assets = assetsInit(gfx, audio, {\n\terrHandler: (err: string) => {\n\t\tlogger.error(err);\n\t},\n});\n\nconst logger = loggerInit(gfx, assets, {\n\tmax: gconf.logMax,\n});\n\nconst net: Net | null = (() => {\n\tif (gconf.connect) {\n\t\treturn netInit(gconf.connect);\n\t}\n\treturn null;\n})();\n\nfunction recv(type: string, handler: MsgHandler) {\n\tif (!net) {\n\t\tthrow new Error(\"not connected to any websockets\");\n\t}\n\tnet.recv(type, (data: any, id: number) => {\n\t\ttry {\n\t\t\thandler(data, id);\n\t\t} catch (err) {\n\t\t\tlogger.error(err);\n\t\t}\n\t});\n}\n\nfunction send(type: string, data: any) {\n\tif (!net) {\n\t\tthrow new Error(\"not connected to any websockets\");\n\t}\n\tnet.send(type, data);\n}\n\nfunction dt() {\n\treturn app.dt() * debug.timeScale;\n}\n\nfunction play(id: string, conf: AudioPlayConf = {}): AudioPlay {\n\tconst sound = assets.sounds[id];\n\tif (!sound) {\n\t\tthrow new Error(`sound not found: \"${id}\"`);\n\t}\n\treturn audio.play(sound, conf);\n}\n\nfunction isCamLayer(layer?: string): boolean {\n\tconst scene = curScene();\n\treturn !scene.layers[layer ?? scene.defLayer]?.noCam;\n}\n\n// check input state last frame\nfunction mousePos(layer?: string): Vec2 {\n\treturn isCamLayer(layer) ? curScene().cam.mpos : app.mousePos();\n}\n\nfunction drawSprite(\n\tid: string | SpriteData,\n\tconf: DrawSpriteConf = {},\n) {\n\tconst spr = (() => {\n\t\tif (typeof id === \"string\") {\n\t\t\treturn assets.sprites[id];\n\t\t} else {\n\t\t\treturn id;\n\t\t}\n\t})();\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t}\n\tconst q = spr.frames[conf.frame ?? 0];\n\tgfx.drawTexture(spr.tex, {\n\t\t...conf,\n\t\tquad: q,\n\t});\n}\n\n// TODO: DrawTextComf\nfunction drawText(\n\ttxt: string,\n\tconf = {},\n) {\n\t// @ts-ignore\n\tconst fid = conf.font ?? DEF_FONT;\n\tconst font = assets.fonts[fid];\n\tif (!font) {\n\t\tthrow new Error(`font not found: ${fid}`);\n\t}\n\tgfx.drawText(txt, font, conf);\n}\n\n// TODO: comp registry?\n// TODO: comps assert required other comps\n\nconst DEF_GRAVITY = 980;\nconst DEF_ORIGIN = \"topleft\";\n\ntype Timer = {\n\ttime: number,\n\tcb(): void,\n};\n\ntype Game = {\n\tloaded: boolean,\n\tscenes: Record<string, Scene>,\n\tcurScene: string | null,\n\tnextScene: SceneSwitch | null,\n};\n\ntype SceneSwitch = {\n\tname: string,\n\targs: any[],\n};\n\ntype Scene = {\n\tinit: (...args) => void,\n\tinitialized: boolean,\n\tevents: {\n\t\tadd: TaggedEvent[],\n\t\tupdate: TaggedEvent[],\n\t\tdraw: TaggedEvent[],\n\t\tdestroy: TaggedEvent[],\n\t\tkeyDown: KeyInputEvent[],\n\t\tkeyPress: KeyInputEvent[],\n\t\tkeyPressRep: KeyInputEvent[],\n\t\tkeyRelease: KeyInputEvent[],\n\t\tmouseClick: MouseInputEvent[],\n\t\tmouseRelease: MouseInputEvent[],\n\t\tmouseDown: MouseInputEvent[],\n\t\tcharInput: CharInputEvent[],\n\t},\n\taction: Array<() => void>,\n\trender: Array<() => void>,\n\tobjs: Map<GameObjID, GameObj>,\n\tlastObjID: GameObjID,\n\ttimers: Record<TimerID, Timer>,\n\tlastTimerID: TimerID,\n\tcam: Camera,\n\tgravity: number,\n\tlayers: Record<string, Layer>,\n\tdefLayer: string | null,\n\tdata: any,\n};\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n\tmpos: Vec2,\n\tmatrix: Mat4,\n};\n\ntype Layer = {\n\torder: number,\n\tnoCam: boolean,\n\talpha: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyInputEvent = {\n\tkey: string,\n\tcb(): void,\n};\n\ntype MouseInputEvent = {\n\tcb(): void,\n};\n\ntype CharInputEvent = {\n\tcb: (ch: string) => void,\n};\n\nconst game: Game = {\n\tloaded: false,\n\tscenes: {},\n\tcurScene: null,\n\tnextScene: null,\n};\n\n// start describing a scene (this should be called before start())\nfunction scene(name: string, cb: (...args) => void) {\n\n\tgame.scenes[name] = {\n\n\t\tinit: cb,\n\t\tinitialized: false,\n\n\t\t// event callbacks\n\t\tevents: {\n\t\t\tadd: [],\n\t\t\tupdate: [],\n\t\t\tdraw: [],\n\t\t\tdestroy: [],\n\t\t\tkeyDown: [],\n\t\t\tkeyPress: [],\n\t\t\tkeyPressRep: [],\n\t\t\tkeyRelease: [],\n\t\t\tmouseClick: [],\n\t\t\tmouseRelease: [],\n\t\t\tmouseDown: [],\n\t\t\tcharInput: [],\n\t\t},\n\n\t\taction: [],\n\t\trender: [],\n\n\t\t// in game pool\n\t\tobjs: new Map(),\n\t\tlastObjID: 0,\n\t\ttimers: {},\n\t\tlastTimerID: 0,\n\n\t\t// cam\n\t\tcam: {\n\t\t\tpos: vec2(gfx.width() / 2, gfx.height() / 2),\n\t\t\tscale: vec2(1, 1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\tmpos: vec2(0),\n\t\t\tmatrix: mat4(),\n\t\t},\n\n\t\t// misc\n\t\tlayers: {},\n\t\tdefLayer: null,\n\t\tgravity: DEF_GRAVITY,\n\t\tdata: {},\n\n\t};\n\n}\n\nfunction curScene(): Scene {\n\treturn game.scenes[game.curScene];\n}\n\n// custom data kv store for scene\nfunction sceneData(): any {\n\treturn curScene().data;\n}\n\n// register inputs for controlling debug features\nfunction regDebugInputs() {\n\n\tkeyPress(\"`\", () => {\n\t\tdebug.showLog = !debug.showLog;\n\t\tlogger.info(`show log: ${debug.showLog ? \"on\" : \"off\"}`);\n\t});\n\n\tkeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t\tlogger.info(`inspect: ${debug.inspect ? \"on\" : \"off\"}`);\n\t});\n\n\tkeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tkeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t\tlogger.info(`${debug.paused ? \"paused\" : \"unpaused\"}`);\n\t});\n\n\tkeyPress(\"f7\", () => {\n\t\tdebug.timeScale = clamp(debug.timeScale - 0.2, 0, 2);\n\t\tlogger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n\t});\n\n\tkeyPress(\"f9\", () => {\n\t\tdebug.timeScale = clamp(debug.timeScale + 0.2, 0, 2);\n\t\tlogger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n\t});\n\n\tkeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t\tlogger.info(`stepped frame`);\n\t});\n\n}\n\n// schedule to switch to a scene\nfunction go(name: string, ...args) {\n\tgame.nextScene = {\n\t\tname: name,\n\t\targs: [...args],\n\t};\n}\n\nfunction goSync(name: string, ...args) {\n\treload(name);\n\tgame.curScene = name;\n\tconst scene = game.scenes[name];\n\tif (!scene) {\n\t\tthrow new Error(`scene not found: '${name}'`);\n\t}\n\tif (!scene.initialized) {\n\t\ttry {\n\t\t\tscene.init(...args);\n\t\t} catch (e) {\n\t\t\tlogger.error(e.stack);\n\t\t}\n\t\tif (gconf.debug) {\n\t\t\tregDebugInputs();\n\t\t}\n\t\tscene.initialized = true;\n\t}\n}\n\n// reload a scene, reset all objs to their init states\nfunction reload(name: string) {\n\tif (!game.scenes[name]) {\n\t\tthrow new Error(`scene not found: '${name}'`);\n\t}\n\tscene(name, game.scenes[name].init);\n}\n\nfunction layers(list: string[], def?: string) {\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\treturn;\n\t}\n\n\tlist.forEach((name, idx) => {\n\t\tscene.layers[name] = {\n\t\t\talpha: 1,\n\t\t\torder: idx + 1,\n\t\t\tnoCam: false,\n\t\t};\n\t});\n\n\tif (def) {\n\t\tscene.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tconst cam = curScene().cam;\n\tif (pos.length > 0) {\n\t\tcam.pos = vec2(...pos);\n\t}\n\treturn cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tconst cam = curScene().cam;\n\tif (scale.length > 0) {\n\t\tcam.scale = vec2(...scale);\n\t}\n\treturn cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tconst cam = curScene().cam;\n\tif (angle !== undefined) {\n\t\tcam.angle = angle;\n\t}\n\treturn cam.angle;\n}\n\nfunction camShake(intensity: number) {\n\tconst cam = curScene().cam;\n\tcam.shake = intensity;\n}\n\nfunction camIgnore(layers: string[]) {\n\tconst scene = curScene();\n\tlayers.forEach((name) => {\n\t\tif (scene.layers[name]) {\n\t\t\tscene.layers[name].noCam = true;\n\t\t}\n\t})\n}\n\nfunction add(comps: Comp[]): GameObj {\n\n\tconst obj: GameObj = {\n\n\t\thidden: false,\n\t\tpaused: false,\n\t\t_tags: [],\n\t\t_id: null,\n\n\t\t_events: {\n\t\t\tadd: [],\n\t\t\tupdate: [],\n\t\t\tdraw: [],\n\t\t\tdestroy: [],\n\t\t\tinspect: [],\n\t\t},\n\n\t\t// use a comp\n\t\tuse(comp: Comp) {\n\n\t\t\tif (comp === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst type = typeof comp;\n\n\t\t\t// tags\n\t\t\tif (type === \"string\") {\n\t\t\t\tthis._tags.push(comp);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type !== \"object\") {\n\t\t\t\tthrow new Error(`invalid comp type: ${type}`);\n\t\t\t}\n\n\t\t\t// multi comps\n\t\t\tif (Array.isArray(comp)) {\n\t\t\t\tfor (const c of comp) {\n\t\t\t\t\tthis.use(c);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tif (this._events[k]) {\n\t\t\t\t\t\tthis._events[k].push(comp[k].bind(this));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[k] = comp[k].bind(this);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// TODO: deal with getter / setters\n\t\t\t\t// fields\n\t\t\t\tthis[k] = comp[k];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// if obj is current in scene\n\t\texists() {\n\t\t\treturn this._id !== undefined;\n\t\t},\n\n\t\t// if obj has certain tag\n\t\tis(tag) {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this._tags.includes(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this._tags.includes(tag);\n\t\t},\n\n\t\ton(event, cb) {\n\t\t\tif (!this._events[event]) {\n\t\t\t\tthis._events[event] = [];\n\t\t\t}\n\t\t\tthis._events[event].push(cb);\n\t\t},\n\n\t\taction(cb) {\n\t\t\tthis.on(\"update\", cb);\n\t\t},\n\n\t\ttrigger(event, ...args) {\n\n\t\t\tif (this._events[event]) {\n\t\t\t\tfor (const f of this._events[event]) {\n\t\t\t\t\tf.call(this, ...args);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst scene = curScene();\n\t\t\tconst events = scene.events[event];\n\n\t\t\tif (events) {\n\t\t\t\tfor (const ev of events) {\n\t\t\t\t\tif (this.is(ev.tag)) {\n\t\t\t\t\t\tev.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\trmTag(t) {\n\t\t\tconst idx = this._tags.indexOf(t);\n\t\t\tif (idx > -1) {\n\t\t\t\tthis._tags.splice(idx, 1);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tobj.use(comps);\n\n\tconst scene = curScene();\n\tconst id = scene.lastObjID++;\n\n\tscene.objs.set(id, obj);\n\tobj._id = id;\n\n\tobj.trigger(\"add\");\n\n\tfor (const e of scene.events.add) {\n\t\tif (obj.is(e.tag)) {\n\t\t\te.cb(obj);\n\t\t}\n\t}\n\n\treturn obj;\n\n}\n\nfunction readd(obj: GameObj): GameObj {\n\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\n\tconst scene = curScene();\n\n\tscene.objs.delete(obj._id);\n\tconst id = scene.lastObjID++;\n\tscene.objs.set(id, obj);\n\tobj._id = id;\n\n\treturn obj;\n\n}\n\n// add an event to a tag\nfunction on(event: string, tag: string, cb: (obj: GameObj) => void) {\n\tconst scene = curScene();\n\tif (!scene.events[event]) {\n\t\tscene.events[event] = [];\n\t}\n\tscene.events[event].push({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// add update event to a tag or global update\nfunction action(tag: string | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tcurScene().action.push(tag);\n\t} else if (typeof tag === \"string\") {\n\t\ton(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction render(tag: string | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tcurScene().render.push(tag);\n\t} else if (typeof tag === \"string\") {\n\t\ton(\"update\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction collides(\n\tt1: string,\n\tt2: string,\n\tf: (a: GameObj, b: GameObj) => void,\n) {\n\taction(t1, (o1) => {\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n}\n\n// add an event that runs with objs with t1 overlaps with objs with t2\nfunction overlaps(\n\tt1: string,\n\tt2: string,\n\tf: (a: GameObj, b: GameObj) => void,\n) {\n\taction(t1, (o1) => {\n\t\to1._checkOverlaps(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction clicks(t: string, f: (obj: GameObj) => void) {\n\taction(t, (o) => {\n\t\tif (o.isClicked()) {\n\t\t\tf(o);\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tconst scene = curScene();\n\t\tscene.timers[scene.lastTimerID++] = {\n\t\t\ttime: t,\n\t\t\tcb: () => {\n\t\t\t\tif (f) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t},\n\t\t};\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): LoopHandle {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn {\n\t\tstop() {\n\t\t\tstopped = true;\n\t\t},\n\t};\n\n}\n\nfunction pushKeyEvent(e: string, k: string, f: () => void) {\n\tif (Array.isArray(k)) {\n\t\tfor (const key of k) {\n\t\t\tpushKeyEvent(e, key, f);\n\t\t}\n\t} else {\n\t\tconst scene = curScene();\n\t\tscene.events[e].push({\n\t\t\tkey: k,\n\t\t\tcb: f,\n\t\t});\n\t}\n}\n\n// input callbacks\nfunction keyDown(k: string, f: () => void) {\n\tpushKeyEvent(\"keyDown\", k, f);\n}\n\nfunction keyPress(k: string, f: () => void) {\n\tpushKeyEvent(\"keyPress\", k, f);\n}\n\nfunction keyPressRep(k: string, f: () => void) {\n\tpushKeyEvent(\"keyPressRep\", k, f);\n}\n\nfunction keyRelease(k: string, f: () => void) {\n\tpushKeyEvent(\"keyRelease\", k, f);\n}\n\nfunction charInput(f: (ch: string) => void) {\n\tconst scene = curScene();\n\tscene.events.charInput.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseDown(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseDown.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseClick(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseClick.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseRelease(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseRelease.push({\n\t\tcb: f,\n\t});\n}\n\n// TODO: cache sorted list\n// get all objects with tag\nfunction get(t?: string): GameObj[] {\n\n\tconst scene = curScene();\n\tconst objs = [...scene.objs.values()].sort((o1, o2) => {\n\t\tconst l1 = scene.layers[o1.layer ?? scene.defLayer]?.order ?? 0;;\n\t\tconst l2 = scene.layers[o2.layer ?? scene.defLayer]?.order ?? 0;\n\t\treturn l1 - l2;\n\t});\n\n\tif (!t) {\n\t\treturn objs;\n\t} else {\n\t\treturn objs.filter(obj => obj.is(t));\n\t}\n\n}\n\n// apply a function to all objects currently in scene with tag t\nfunction every(t: string | ((obj: GameObj) => void), f?: (obj: GameObj) => void) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\tget().forEach(t);\n\t} else if (typeof t === \"string\") {\n\t\tget(t).forEach(f);\n\t}\n}\n\n// every but in reverse order\nfunction revery(t: string | ((obj: GameObj) => void), f?: (obj: GameObj) => void) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\tget().reverse().forEach(t);\n\t} else if (typeof t === \"string\") {\n\t\tget(t).reverse().forEach(f);\n\t}\n}\n\n// destroy an obj\nfunction destroy(obj: GameObj) {\n\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\treturn;\n\t}\n\n\tobj.trigger(\"destroy\");\n\tscene.objs.delete(obj._id);\n\tdelete obj._id;\n\n}\n\n// destroy all obj with the tag\nfunction destroyAll(t: string) {\n\tevery(t, (obj) => {\n\t\tdestroy(obj);\n\t});\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tconst scene = curScene();\n\tif (g !== undefined) {\n\t\tscene.gravity = g;\n\t}\n\treturn scene.gravity;\n}\n\n// TODO: cleaner pause logic\nfunction gameFrame(ignorePause?: boolean) {\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\tthrow new Error(`scene not found: '${game.curScene}'`);\n\t}\n\n\tconst doUpdate = ignorePause || !debug.paused;\n\n\tif (doUpdate) {\n\t\t// update timers\n\t\tfor (const id in scene.timers) {\n\t\t\tconst t = scene.timers[id];\n\t\t\tt.time -= dt();\n\t\t\tif (t.time <= 0) {\n\t\t\t\tt.cb();\n\t\t\t\tdelete scene.timers[id];\n\t\t\t}\n\t\t}\n\t}\n\n\t// update every obj\n\trevery((obj) => {\n\t\tif (!obj.paused && doUpdate) {\n\t\t\tobj.trigger(\"update\");\n\t\t}\n\t});\n\n\tif (doUpdate) {\n\t\tfor (const f of scene.action) {\n\t\t\tf();\n\t\t}\n\t}\n\n\t// calculate camera matrix\n\tconst size = vec2(gfx.width(), gfx.height());\n\tconst cam = scene.cam;\n\tconst shake = vec2FromAngle(rand(0, Math.PI * 2)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tcam.matrix = mat4()\n\t\t.translate(size.scale(0.5))\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(size.scale(-0.5))\n\t\t.translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake))\n\t\t;\n\n\tcam.mpos = cam.matrix.invert().multVec2(app.mousePos());\n\n\t// draw every obj\n\tevery((obj) => {\n\n\t\tif (!obj.hidden) {\n\n\t\t\tgfx.pushTransform();\n\n\t\t\tif (isCamLayer(obj.layer)) {\n\t\t\t\tgfx.pushMatrix(cam.matrix);\n\t\t\t}\n\n\t\t\tobj.trigger(\"draw\");\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t});\n\n\tfor (const f of scene.render) {\n\t\tf();\n\t}\n\n}\n\nfunction handleEvents() {\n\n\tconst scene = curScene();\n\n\tfor (const e of scene.events.charInput) {\n\t\tapp.charInputted().forEach(e.cb);\n\t}\n\n\t// run input checks & callbacks\n\tfor (const e of scene.events.keyDown) {\n\t\tif (app.keyDown(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyPress) {\n\t\tif (app.keyPressed(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyPressRep) {\n\t\tif (app.keyPressedRep(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyRelease) {\n\t\tif (app.keyReleased(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseDown) {\n\t\tif (app.mouseDown()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseClick) {\n\t\tif (app.mouseClicked()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseRelease) {\n\t\tif (app.mouseReleased()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n}\n\nfunction drawInspect() {\n\n\tconst scene = curScene();\n\tlet inspecting = null;\n\tconst font = assets.defFont();\n\tconst lcolor = rgba(gconf.inspectColor ?? [0, 1, 1, 1]);\n\n\tfunction drawInspectTxt(pos, txt, scale) {\n\n\t\tconst pad = vec2(4).scale(1 / scale);\n\n\t\tconst ftxt = gfx.fmtText(txt, font, {\n\t\t\tsize: 12 / scale,\n\t\t\tpos: pos.add(vec2(pad.x, pad.y)),\n\t\t});\n\n\t\tgfx.drawRect(pos, ftxt.width + pad.x * 2, ftxt.height + pad.x * 2, {\n\t\t\tcolor: rgba(0, 0, 0, 1),\n\t\t});\n\n\t\tgfx.drawFmtText(ftxt);\n\n\t}\n\n\tfunction drawObj(obj, f) {\n\t\tconst isCam = isCamLayer(obj.layer);\n\t\tconst scale = gfx.scale() * (isCam ? (scene.cam.scale.x + scene.cam.scale.y) / 2 : 1);\n\t\tif (isCam) {\n\t\t\tgfx.pushTransform();\n\t\t\tgfx.pushMatrix(scene.cam.matrix);\n\t\t}\n\t\tf(scale);\n\t\tif (isCam) {\n\t\t\tgfx.popTransform();\n\t\t}\n\t}\n\n\trevery((obj) => {\n\n\t\tif (!obj.area) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (obj.hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawObj(obj, (scale) => {\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovered()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 6 : 2) / scale;\n\t\t\tconst a = obj._worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tgfx.drawRectStroke(a.p1, w, h, {\n\t\t\t\twidth: lwidth,\n\t\t\t\tcolor: lcolor,\n\t\t\t});\n\n\t\t});\n\n\t});\n\n\tif (inspecting) {\n\n\t\tdrawObj(inspecting, (scale) => {\n\n\t\t\tconst mpos = mousePos(inspecting.layer);\n\t\t\tconst lines = [];\n\n\t\t\tfor (const tag of inspecting._tags) {\n\t\t\t\tlines.push(`\"${tag}\"`);\n\t\t\t}\n\n\t\t\tfor (const inspect of inspecting._events.inspect) {\n\t\t\t\tconst info = inspect();\n\t\t\t\tfor (const field in info) {\n\t\t\t\t\tlines.push(`${field}: ${info[field]}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectTxt(mpos, lines.join(\"\\n\"), scale);\n\n\t\t});\n\n\t}\n\n\tdrawInspectTxt(vec2(0), app.fps() + \"\", gfx.scale());\n\n}\n\n// start the game with a scene\nfunction start(name: string, ...args) {\n\n\tapp.run(() => {\n\n\t\tgfx.frameStart();\n\n\t\tif (!game.loaded) {\n\n\t\t\t// if assets are not fully loaded, draw a progress bar\n\t\t\tconst progress = assets.loadProgress();\n\n\t\t\tif (progress === 1) {\n\t\t\t\tgame.loaded = true;\n\t\t\t\tgoSync(name, ...args);\n\t\t\t\tif (net) {\n\t\t\t\t\tnet.connect().catch(logger.error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst w = gfx.width() / 2;\n\t\t\t\tconst h = 24 / gfx.scale();\n\t\t\t\tconst pos = vec2(gfx.width() / 2, gfx.height() / 2).sub(vec2(w / 2, h / 2));\n\t\t\t\tgfx.drawRect(vec2(0), gfx.width(), gfx.height(), { color: rgb(0, 0, 0), });\n\t\t\t\tgfx.drawRectStroke(pos, w, h, { width: 4 / gfx.scale(), });\n\t\t\t\tgfx.drawRect(pos, w * progress, h);\n\t\t\t}\n\n\t\t} else {\n\n\t\t\ttry {\n\n\t\t\t\tif (!curScene()) {\n\t\t\t\t\tthrow new Error(`scene not found: '${game.curScene}'`);\n\t\t\t\t}\n\n\t\t\t\thandleEvents();\n\t\t\t\tgameFrame();\n\n\t\t\t\tif (debug.inspect) {\n\t\t\t\t\tdrawInspect();\n\t\t\t\t}\n\n\t\t\t} catch (e) {\n\n\t\t\t\tlogger.error(e.stack);\n\t\t\t\tapp.quit();\n\n\t\t\t}\n\n\t\t\tif (debug.showLog) {\n\t\t\t\tlogger.draw();\n\t\t\t}\n\n\t\t\tif (game.nextScene) {\n\t\t\t\tgoSync.apply(null, [ game.nextScene.name, ...game.nextScene.args, ]);\n\t\t\t\tgame.nextScene = null;\n\t\t\t}\n\n\t\t}\n\n\t\tgfx.frameEnd();\n\n\t});\n\n}\n\n// TODO: have velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tpos: vec2(...args),\n\n\t\tmove(...args) {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tconst dx = p.x * dt();\n\t\t\tconst dy = p.y * dt();\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn {\n\t\t\t\tpos: `(${~~this.pos.x}, ${~~this.pos.y})`,\n\t\t\t};\n\t\t},\n\n\t};\n\n}\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tscale: vec2(...args),\n\t\tflipX(s: number) {\n\t\t\tthis.scale.x = Math.sign(s) * Math.abs(this.scale.x);\n\t\t},\n\t\tflipY(s: number) {\n\t\t\tthis.scale.y = Math.sign(s) * Math.abs(this.scale.y);\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tangle: r ?? 0,\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tcolor: rgba(...args),\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\treturn {\n\t\torigin: o,\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tlayer: l,\n\t\tinspect(): LayerCompInspect {\n\t\t\tconst scene = curScene();\n\t\t\treturn {\n\t\t\t\tlayer: this.layer ?? scene.defLayer,\n\t\t\t};\n\t\t},\n\t};\n}\n\nfunction isSameLayer(o1: GameObj, o2: GameObj): boolean {\n\tconst scene = curScene();\n\treturn (o1.layer ?? scene.defLayer) === (o2.layer ?? scene.defLayer);\n}\n\n// TODO: active flag\n// TODO: tell which size collides\n// TODO: dynamic update when size change\nfunction area(p1: Vec2, p2: Vec2): AreaComp {\n\n\tconst colliding = {};\n\tconst overlapping = {};\n\n\treturn {\n\n\t\tarea: {\n\t\t\tp1: p1,\n\t\t\tp2: p2,\n\t\t},\n\n\t\tareaWidth(): number {\n\t\t\tconst { p1, p2 } = this._worldArea();\n\t\t\treturn p2.x - p1.x;\n\t\t},\n\n\t\tareaHeight(): number {\n\t\t\tconst { p1, p2 } = this._worldArea();\n\t\t\treturn p2.y - p1.y;\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn app.mouseClicked() && this.isHovered();\n\t\t},\n\n\t\tisHovered() {\n\t\t\treturn this.hasPt(mousePos(this.layer));\n\t\t},\n\n\t\tisCollided(other) {\n\n\t\t\tif (!other.area) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst a1 = this._worldArea();\n\t\t\tconst a2 = other._worldArea();\n\n\t\t\treturn colRectRect(a1, a2);\n\n\t\t},\n\n\t\tisOverlapped(other) {\n\n\t\t\tif (!other.area) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst a1 = this._worldArea();\n\t\t\tconst a2 = other._worldArea();\n\n\t\t\treturn overlapRectRect(a1, a2);\n\n\t\t},\n\n\t\tclicks(f: () => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\thovers(f: () => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tif (this.isHovered()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tcollides(tag: string, f: (o: GameObj) => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tthis._checkCollisions(tag, f);\n\t\t\t});\n\t\t},\n\n\t\toverlaps(tag: string, f: (o: GameObj) => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tthis._checkOverlaps(tag, f);\n\t\t\t});\n\t\t},\n\n\t\thasPt(pt: Vec2): boolean {\n\t\t\tconst a = this._worldArea();\n\t\t\treturn colRectPt({\n\t\t\t\tp1: a.p1,\n\t\t\t\tp2: a.p2,\n\t\t\t}, pt);\n\t\t},\n\n\t\t// TODO: make overlap events still trigger\n\t\t// push object out of other solid objects\n\t\tresolve(): CollisionResolve[] {\n\n\t\t\tconst targets: CollisionResolve[] = [];\n\n\t\t\tevery((other) => {\n\n\t\t\t\tif (other === this) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!other.solid) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!other.area) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst a1 = this._worldArea();\n\t\t\t\tconst a2 = other._worldArea();\n\n\t\t\t\tif (!colRectRect(a1, a2)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst disLeft = a1.p2.x - a2.p1.x;\n\t\t\t\tconst disRight = a2.p2.x - a1.p1.x;\n\t\t\t\tconst disTop = a1.p2.y - a2.p1.y;\n\t\t\t\tconst disBottom = a2.p2.y - a1.p1.y;\n\t\t\t\tconst min = Math.min(disLeft, disRight, disTop, disBottom);\n\n\t\t\t\tconst side = (() => {\n\t\t\t\t\tswitch (min) {\n\t\t\t\t\t\tcase disLeft:\n\t\t\t\t\t\t\tthis.pos.x -= disLeft;\n\t\t\t\t\t\t\treturn \"right\";\n\t\t\t\t\t\tcase disRight:\n\t\t\t\t\t\t\tthis.pos.x += disRight;\n\t\t\t\t\t\t\treturn \"left\";\n\t\t\t\t\t\tcase disTop:\n\t\t\t\t\t\t\tthis.pos.y -= disTop;\n\t\t\t\t\t\t\treturn \"bottom\";\n\t\t\t\t\t\tcase disBottom:\n\t\t\t\t\t\t\tthis.pos.y += disBottom;\n\t\t\t\t\t\t\treturn \"top\";\n\t\t\t\t\t}\n\t\t\t\t})();\n\n\t\t\t\ttargets.push({\n\t\t\t\t\tobj: other,\n\t\t\t\t\tside: side,\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\treturn targets;\n\n\t\t},\n\n\t\t_checkCollisions(tag: string, f: (obj: GameObj) => void) {\n\n\t\t\tevery(tag, (obj) => {\n\t\t\t\tif (this === obj) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isCollided(obj)) {\n\t\t\t\t\tf(obj);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isCollided(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: repetitive with collides\n\t\t_checkOverlaps(tag: string, f: (obj: GameObj) => void) {\n\n\t\t\tevery(tag, (obj) => {\n\t\t\t\tif (this === obj) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (overlapping[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isOverlapped(obj)) {\n\t\t\t\t\tf(obj);\n\t\t\t\t\toverlapping[obj._id] = obj;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const id in overlapping) {\n\t\t\t\tconst obj = overlapping[id];\n\t\t\t\tif (!this.isOverlapped(obj)) {\n\t\t\t\t\tdelete overlapping[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\t_worldArea(): Rect {\n\n\t\t\tconst a = this.area;\n\t\t\tconst pos = this.pos || vec2(0);\n\t\t\tconst scale = this.scale || vec2(1);\n\t\t\tconst p1 = pos.add(a.p1.dot(scale));\n\t\t\tconst p2 = pos.add(a.p2.dot(scale));\n\n\t\t\tconst area = {\n\t\t\t\tp1: vec2(Math.min(p1.x, p2.x), Math.min(p1.y, p2.y)),\n\t\t\t\tp2: vec2(Math.max(p1.x, p2.x), Math.max(p1.y, p2.y)),\n\t\t\t};\n\n\t\t\treturn area;\n\n\t\t},\n\n\t};\n\n}\n\nfunction getAreaFromSize(w, h, o) {\n\tconst size = vec2(w, h);\n\tconst offset = originPt(o || DEF_ORIGIN).dot(size).scale(-0.5);\n\treturn area(\n\t\toffset.sub(size.scale(0.5)),\n\t\toffset.add(size.scale(0.5)),\n\t);\n}\n\nfunction sprite(id: string, conf: SpriteCompConf = {}): SpriteComp {\n\n\tlet spr = assets.sprites[id];\n\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t}\n\n\tconst q = { ...spr.frames[0] };\n\n\tif (conf.quad) {\n\t\tq.x += conf.quad.x * q.w;\n\t\tq.y += conf.quad.y * q.h;\n\t\tq.w *= conf.quad.w;\n\t\tq.h *= conf.quad.h;\n\t}\n\n\tconst width = spr.tex.width * q.w;\n\tconst height = spr.tex.height * q.h;\n\tlet curAnim: SpriteCompCurAnim | null = null;\n\n\treturn {\n\n\t\twidth: width,\n\t\theight: height,\n\t\tanimSpeed: conf.animSpeed || 0.1,\n\t\tframe: conf.frame || 0,\n\t\tquad: conf.quad || quad(0, 0, 1, 1),\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\t\t\tconst q = spr.frames[this.frame];\n\n\t\t\tdrawSprite(spr, {\n\t\t\t\tpos: this.pos,\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tcolor: this.color,\n\t\t\t\tframe: this.frame,\n\t\t\t\torigin: this.origin,\n\t\t\t\tquad: this.quad,\n\t\t\t\tprog: assets.shaders[this.shader],\n\t\t\t\tuniform: this.uniform,\n\t\t\t});\n\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tcurAnim.timer += dt();\n\n\t\t\tif (curAnim.timer >= this.animSpeed) {\n\t\t\t\t// TODO: anim dir\n\t\t\t\tthis.frame++;\n\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tcurAnim.timer -= this.animSpeed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tplay(name, loop = true) {\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (!anim) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\tloop: loop,\n\t\t\t\ttimer: 0,\n\t\t\t};\n\n\t\t\tthis.frame = anim.from;\n\t\t\tthis.trigger(\"animPlay\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tchangeSprite(id) {\n\n\t\t\tspr = assets.sprites[id];\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tconst q = { ...spr.frames[0] };\n\n\t\t\tif (conf.quad) {\n\t\t\t\tq.x += conf.quad.x * q.w;\n\t\t\t\tq.y += conf.quad.y * q.h;\n\t\t\t\tq.w *= conf.quad.w;\n\t\t\t\tq.h *= conf.quad.h;\n\t\t\t}\n\n\t\t\tthis.width = spr.tex.width * q.w;\n\t\t\tthis.height = spr.tex.height * q.h;\n\n\t\t\tif (this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\n\t\t\tcurAnim = null;\n\t\t\tthis.frame = 0;\n\n\t\t},\n\n\t\tnumFrames() {\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tinspect(): SpriteCompInspect {\n\t\t\tconst info: SpriteCompInspect = {};\n\t\t\tif (curAnim) {\n\t\t\t\tinfo.curAnim = `\"${curAnim.name}\"`;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, size: number, conf: TextCompConf = {}): TextComp {\n\n\treturn {\n\n\t\ttext: t,\n\t\ttextSize: size,\n\t\tfont: conf.font,\n\t\t// TODO: calc these at init\n\t\twidth: 0,\n\t\theight: 0,\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tconst scene = curScene();\n\t\t\t\tconst font = assets.fonts[this.font ?? DEF_FONT];\n\t\t\t\tconst ftext = gfx.fmtText(this.text + \"\", font, {\n\t\t\t\t\tpos: this.pos,\n\t\t\t\t\tscale: this.scale,\n\t\t\t\t\trot: this.angle,\n\t\t\t\t\tsize: this.textSize,\n\t\t\t\t\torigin: this.origin,\n\t\t\t\t\tcolor: this.color,\n\t\t\t\t\twidth: conf.width,\n\t\t\t\t});\n\t\t\t\tthis.width = ftext.width / (this.scale?.x || 1);\n\t\t\t\tthis.height = ftext.height / (this.scale?.y || 1);\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\t\t\tconst font = assets.fonts[this.font ?? DEF_FONT];\n\n\t\t\tconst ftext = gfx.fmtText(this.text + \"\", font, {\n\t\t\t\tpos: this.pos,\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tsize: this.textSize,\n\t\t\t\torigin: this.origin,\n\t\t\t\tcolor: this.color,\n\t\t\t\twidth: conf.width,\n\t\t\t});\n\n\t\t\tthis.width = ftext.width;\n\t\t\tthis.height = ftext.height;\n\n\t\t\tgfx.drawFmtText(ftext);\n\n\t\t},\n\n\t};\n\n}\n\nfunction rect(\n\tw: number,\n\th: number,\n\tconf: RectCompConf = {},\n): RectComp {\n\n\treturn {\n\n\t\twidth: w,\n\t\theight: h,\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\n\t\t\tgfx.drawRect(this.pos, this.width, this.height, {\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tcolor: this.color,\n\t\t\t\torigin: this.origin,\n\t\t\t\tprog: assets.shaders[this.shader],\n\t\t\t\tuniform: this.uniform,\n\t\t\t});\n\n\t\t},\n\n\t};\n\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tsolid: true,\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_MAX_VEL = 960;\nconst DEF_JUMP_FORCE = 480;\n\nfunction body(conf: BodyCompConf = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tconst maxVel = conf.maxVel ?? DEF_MAX_VEL;\n\n\treturn {\n\n\t\tjumpForce: conf.jumpForce ?? DEF_JUMP_FORCE,\n\n\t\tupdate() {\n\n\t\t\tthis.move(0, velY);\n\n\t\t\tconst targets = this.resolve();\n\t\t\tlet justOff = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\t\t\t\tif (!curPlatform.exists() || !this.isCollided(curPlatform)) {\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustOff = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos) {\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tvelY = Math.min(velY + gravity() * dt(), maxVel);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tfor (const target of targets) {\n\t\t\t\t\tif (target.side === \"bottom\" && velY > 0) {\n\t\t\t\t\t\tcurPlatform = target.obj;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\tif (!justOff) {\n\t\t\t\t\t\t\tthis.trigger(\"grounded\", curPlatform);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (target.side === \"top\" && velY < 0) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbump\", target.obj);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst prog = assets.shaders[id];\n\treturn {\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nconst debug: Debug = {\n\tpaused: false,\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: app.fps,\n\tobjCount(): number {\n\t\treturn curScene().objs.size;\n\t},\n\tstepFrame() {\n\t\tgameFrame(true);\n\t},\n\tdrawCalls: gfx.drawCalls,\n\tclearLog: logger.clear,\n\tlog: logger.info,\n\terror: logger.error,\n};\n\nfunction addLevel(map: string[], conf: LevelConf): Level {\n\n\tconst pool: GameObj[] = [];\n\tconst offset = vec2(conf.pos || 0);\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * conf.width,\n\t\t\t\toffset.y + p.y * conf.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, p: Vec2): GameObj {\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (Array.isArray(sym)) {\n\t\t\t\t\treturn sym;\n\t\t\t\t} else if (conf[sym]) {\n\t\t\t\t\tif (typeof conf[sym] === \"function\") {\n\t\t\t\t\t\treturn conf[sym]();\n\t\t\t\t\t} else if (Array.isArray(conf[sym])) {\n\t\t\t\t\t\treturn [...conf[sym]];\n\t\t\t\t\t}\n\t\t\t\t} else if (conf.any) {\n\t\t\t\t\treturn conf.any(sym);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcomps.push(pos(\n\t\t\t\toffset.x + p.x * conf.width,\n\t\t\t\toffset.y + p.y * conf.height\n\t\t\t));\n\n\t\t\tconst obj = add(comps);\n\n\t\t\tpool.push(obj);\n\n\t\t\tobj.use({\n\n\t\t\t\tgridPos: p.clone(),\n\n\t\t\t\tsetGridPos(p: Vec2) {\n\t\t\t\t\tthis.gridPos = p.clone();\n\t\t\t\t\tthis.pos = vec2(\n\t\t\t\t\t\toffset.x + this.gridPos.x * conf.width,\n\t\t\t\t\t\toffset.y + this.gridPos.y * conf.height\n\t\t\t\t\t);\n\t\t\t\t},\n\n\t\t\t\tmoveLeft() {\n\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t\t\t},\n\n\t\t\t\tmoveRight() {\n\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t\t\t},\n\n\t\t\t\tmoveUp() {\n\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t\t\t},\n\n\t\t\t\tmoveDown() {\n\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t\t\t},\n\n\t\t\t});\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * conf.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * conf.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of pool) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nconst ctx: KaboomCtx = {\n\tstart,\n\t// asset load\n\tloadRoot: assets.loadRoot,\n\tloadSprite: assets.loadSprite,\n\tloadSound: assets.loadSound,\n\tloadFont: assets.loadFont,\n\tloadShader: assets.loadShader,\n\taddLoader: assets.addLoader,\n\t// query\n\twidth: gfx.width,\n\theight: gfx.height,\n\tdt: dt,\n\ttime: app.time,\n\tscreenshot: app.screenshot,\n\t// scene\n\tscene,\n\tgo,\n\tsceneData,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tcamShake,\n\tcamIgnore,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// net\n\tsend,\n\trecv,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tsolid,\n\tbody,\n\tshader,\n\t// group events\n\ton,\n\taction,\n\trender,\n\tcollides,\n\toverlaps,\n\tclicks,\n\t// input\n\tkeyDown,\n\tkeyPress,\n\tkeyPressRep,\n\tkeyRelease,\n\tcharInput,\n\tmouseDown,\n\tmouseClick,\n\tmouseRelease,\n\tmousePos,\n\tcursor: app.cursor,\n\tkeyIsDown: app.keyDown,\n\tkeyIsPressed: app.keyPressed,\n\tkeyIsPressedRep: app.keyPressedRep,\n\tkeyIsReleased: app.keyReleased,\n\tmouseIsDown: app.mouseDown,\n\tmouseIsClicked: app.mouseClicked,\n\tmouseIsReleased: app.mouseReleased,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume: audio.volume,\n\t// math\n\tmakeRng,\n\trand,\n\trandSeed,\n\tvec2,\n\trgb,\n\trgba,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\tdrawRect: gfx.drawRect,\n\tdrawRectStroke: gfx.drawRectStroke,\n\tdrawLine: gfx.drawLine,\n\t// debug\n\tdebug,\n\t// level\n\taddLevel,\n};\n\nif (gconf.plugins) {\n\tfor (const src of gconf.plugins) {\n\t\tconst map = src(ctx);\n\t\tfor (const k in map) {\n\t\t\tctx[k] = map[k];\n\t\t}\n\t}\n}\n\nif (gconf.global) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nreturn ctx;\n\n};\n", "import kaboom from \"kaboom\";\n\n//IMPORTANT: Make sure to use Kaboom version 0.5.0 for this game by adding the correct script tag in the HTML file.\n\nkaboom({\n  global: true,\n  fullscreen: true,\n  scale: 2,\n  debug: true,\n  clearColor: [0, 0, 0, 1],\n});\n\n// Game logic\n\nlet isJumping = true;\nvar isMobile = navigator.userAgent.match(/Mobile/i) != null;\nvar isTablet = navigator.userAgent.match(/Tablet/i) != null;\n\nloadAssets();\n\n// controls\nfunction CharacterMovement() {\n  // Example\n  // createArrow('arrow-up', 'up', width() - 50, height() - 55)\n\n  createArrow(\"arrow-up\", \"up\", 70 - 50, player.pos.y + 55);\n  createArrow(\"arrow-down\", \"down\", 70 - 50, player.pos.y + 32);\n  createArrow(\"arrow-left\", \"left\", 70 - 75, player.pos.y + 32);\n  createArrow(\"arrow-right\", \"right\", 70 - 25, player.pos.y + 32);\n\n  // Touch\n  onClick(up, run);\n  onClick(down, run);\n  onClick(left, run);\n  onClick(right, run);\n}\n\nfunction run(key) {\n  if (key === \"up\") {\n    if (player.grounded()) {\n      isJumping = true;\n      player.jump(CURRENT_JUMP_FORCE);\n    }\n  } else if (key === \"down\") {\n  } else if (key === \"left\") {\n    player.move(-MOVE_SPEED, 0);\n\n    up.pos.x = player.pos.x - up.width;\n    down.pos.x = player.pos.x - down.width;\n    left.pos.x = player.pos.x - left.width - 25;\n    right.pos.x = player.pos.x - 15;\n  } else {\n    player.move(MOVE_SPEED, 0);\n\n    up.pos.x = player.pos.x;\n    down.pos.x = player.pos.x;\n    left.pos.x = player.pos.x - 25;\n    right.pos.x = player.pos.x + 25;\n    // up.move(MOVE_SPEED, 0);\n    // down.move(MOVE_SPEED, 0);\n\n    // left.move(MOVE_SPEED, 0);\n    // right.move(MOVE_SPEED, 0);\n  }\n}\n\nfunction createArrow(spriteName, key, x, y) {\n  const arrow = add([\n    pos(x, y),\n    sprite(spriteName),\n    scale(0.5),\n    \"button\",\n    {\n      clickAction: () => run(key),\n    },\n  ]);\n  window[key] = arrow;\n  action(\"button\", (b) => {\n    if (b.isHovered()) {\n      b.use(color(0.7, 0.7, 0.7));\n    } else {\n      b.use(color(1, 1, 1));\n    }\n    if (b.isClicked()) {\n      b.clickAction();\n    }\n  });\n  return arrow;\n}\n\nfunction frame() {\n  var iframe = window.frameElement;\n\n  // Checking if webpage is embedded\n  if (iframe) {\n    // The page is in an iFrame\n    go(\"game\", { level: 0, score: 0 });\n  }\n}\n\nfunction mouseDblClick(cb) {\n  document.addEventListener(\"dblclick\", cb);\n}\n\nscene(\"menu\", () => {\n  add([text(\"Maskio Game\"), origin(\"center\"), pos(width() / 2, 80), scale(3)]);\n\n  add([\n    rect(160, 20),\n    origin(\"center\"),\n    pos(width() / 2, 180),\n    \"button\",\n    {\n      clickAction: () => go(\"game\", { level: 0, score: 0 }),\n    },\n  ]);\n\n  add([\n    text(\"Play game\"),\n    origin(\"center\"),\n    pos(width() / 2, 180),\n    color(0, 0, 0),\n  ]);\n  setTimeout(frame, 500);\n\n  add([\n    rect(160, 20),\n    origin(\"center\"),\n    pos(width() / 2, 210),\n    \"button\",\n    {\n      clickAction: () =>\n        go(\"info\", { infoText: \"How To Play\", showInfo: false }),\n    },\n  ]);\n\n  add([\n    text(\"How To Play\"),\n    origin(\"center\"),\n    pos(width() / 2, 210),\n    color(0, 0, 0),\n  ]);\n\n  add([\n    rect(160, 20),\n    origin(\"center\"),\n    pos(width() / 2, 240),\n    \"button\",\n    {\n      clickAction: () => window.open(\"https://kaboomjs.com/\", \"_blank\"),\n    },\n  ]);\n\n  add([\n    text(\"Learn Kaboom.js\"),\n    origin(\"center\"),\n    pos(width() / 2, 240),\n    color(0, 0, 0),\n  ]);\n\n  add([\n    rect(160, 20),\n    origin(\"center\"),\n    pos(width() / 2, 270),\n    \"button\",\n    {\n      clickAction: () => window.open(\"builder.html\", \"_blank\"),\n    },\n  ]);\n\n  add([\n    text(\"Builder\"),\n    origin(\"center\"),\n    pos(width() / 2, 270),\n    color(0, 0, 0),\n  ]);\n\n  add([\n    rect(160, 20),\n    origin(\"center\"),\n    pos(width() / 2, 300),\n    \"button\",\n    {\n      clickAction: () => install(),\n    },\n  ]);\n\n  add([\n    text(\"Install\"),\n    origin(\"center\"),\n    pos(width() / 2, 300),\n    color(0, 0, 0),\n  ]);\n\n  action(\"button\", (b) => {\n    if (b.isHovered()) {\n      b.use(color(0.7, 0.7, 0.7));\n    } else {\n      b.use(color(1, 1, 1));\n    }\n\n    if (b.isClicked()) {\n      b.clickAction();\n    }\n  });\n});\n\nscene(\"game\", ({ level, score }) => {\n  layers([\"bg\", \"obj\", \"ui\"], \"obj\");\n\n  // add([\n  // \tsprite(\"bg\"),\n  // \tscale(width() / 200, height() / 200),\n  // \tlayer(\"bg\"),\n  // ]);\n\n  const levelCfg = {\n    width: 20,\n    height: 20,\n    \"=\": [sprite(\"block\"), scale(0.3), solid()],\n    $: [sprite(\"coin\"), scale(0.3), \"coin\"],\n    \"%\": [sprite(\"surprise\"), solid(), scale(0.3), \"coin-surprise\"],\n    \"*\": [sprite(\"surprise\"), solid(), scale(0.3), \"mushroom-surprise\"],\n    \"&\": [sprite(\"surprise\"), solid(), scale(0.3), \"vaccine-surprise\"],\n    \"}\": [sprite(\"unboxed\"), solid(), scale(0.3)],\n    \"+\": [sprite(\"portal\"), solid(), scale(0.3), \"portal\"],\n    \"^\": [sprite(\"virus\"), solid(), scale(0.15), \"dangerous\"],\n    \"#\": [sprite(\"mushroom\"), solid(), scale(0.3), \"mushroom\", body()],\n    \">\": [sprite(\"vaccine\"), solid(), scale(0.3), \"vaccine\", body()],\n    \"!\": [sprite(\"blue-block\"), scale(0.3), solid()],\n    \"\u00A3\": [sprite(\"blue-brick\"), scale(0.3), solid()],\n    z: [sprite(\"blue-virus\"), solid(), scale(0.15), \"dangerous\"],\n    \"@\": [sprite(\"blue-surprise\"), solid(), scale(0.3), \"coin-surprise\"],\n    x: [sprite(\"blue-steel\"), scale(0.3), solid()],\n  };\n\n  const gameLevel = addLevel(maps[level], levelCfg);\n\n  add([text(`MASKIO\\n000000`), pos(30, 6)]);\n\n  const scoreLabel = add([\n    text(\"x\" + score),\n    pos(160, 6),\n    layer(\"ui\"),\n    {\n      value: score,\n    },\n  ]);\n\n  const coinImg = add([\n    sprite(\"coin\"),\n    scale(0.3),\n    pos(160 - 15, 3),\n    layer(\"ui\"),\n  ]);\n\n  // const builder = add([\n  // \trect(55, 20),\n  // \tpos(350, 6),\n  // \t// sprite(\"surprise\"),\n  // \t\"button\",\n  // \t{\n  // \t\tclickAction: () => window.open(\"builder.html\", \"_blank\"),\n  // \t},\n  // ]);\n\n  // add([text(\"Builder\"), pos(350, 6), color(0, 0, 0)]);\n\n  action(\"button\", (b) => {\n    if (b.isHovered()) {\n      b.use(color(0.7, 0.7, 0.7));\n    } else {\n      b.use(color(1, 1, 1));\n    }\n\n    if (b.isClicked()) {\n      b.clickAction();\n    }\n  });\n\n  add([text(`WORLD\\n${parseInt(level + 1)}-${maps.length}`), pos(240, 6)]);\n\n  const timer = add([\n    text(\"TIME\\n0\"),\n    pos(360, 6),\n    {\n      time: TIME_LEFT,\n    },\n  ]);\n\n  timer.action(() => {\n    timer.time -= dt();\n    timer.text = \"TIME\\n\" + Math.round(timer.time.toFixed(2));\n    if (timer.time <= 0) {\n      go(\"info\", {\n        score: scoreLabel.value,\n        time: \"0.00\",\n        infoText: \"Game Over\",\n      });\n      play(\"hit\");\n      music.stop();\n    }\n  });\n\n  const music = play(\"OtherworldlyFoe\", { loop: true });\n\n  music.volume(0.5);\n\n  const player = add([\n    sprite(\"maskio\"),\n    scale(0.3),\n    solid(),\n    pos(30, 0),\n    body(),\n    big(),\n    origin(\"bot\"),\n  ]);\n\n  window.player = player;\n\n  CharacterMovement();\n\n  action(\"mushroom\", (m) => {\n    m.move(20, 0);\n  });\n\n  action(\"vaccine\", (v) => {\n    v.move(20, 0);\n  });\n\n  player.on(\"headbump\", (obj) => {\n    if (obj.is(\"coin-surprise\")) {\n      gameLevel.spawn(\"$\", obj.gridPos.sub(0, 1));\n      destroy(obj);\n      gameLevel.spawn(\"}\", obj.gridPos.sub(0, 0));\n      play(\"blip\");\n    }\n    if (obj.is(\"mushroom-surprise\")) {\n      gameLevel.spawn(\"#\", obj.gridPos.sub(0, 1));\n      destroy(obj);\n      gameLevel.spawn(\"}\", obj.gridPos.sub(0, 0));\n      play(\"blip\");\n    }\n    if (obj.is(\"vaccine-surprise\")) {\n      gameLevel.spawn(\">\", obj.gridPos.sub(0, 1));\n      destroy(obj);\n      gameLevel.spawn(\"}\", obj.gridPos.sub(0, 0));\n      play(\"blip\");\n    }\n  });\n\n  player.collides(\"mushroom\", (m) => {\n    destroy(m);\n    play(\"powerup\");\n    player.biggify(6);\n  });\n\n  player.collides(\"vaccine\", (v) => {\n    destroy(v);\n    play(\"powerup\");\n    window.vaccine = true;\n  });\n\n  let coinPitch = 0;\n\n  action(() => {\n    if (coinPitch > 0) {\n      coinPitch = Math.max(0, coinPitch - dt() * 100);\n    }\n  });\n\n  player.collides(\"coin\", (c) => {\n    destroy(c);\n    play(\"coin\", {\n      detune: coinPitch,\n    });\n    coinPitch += 100;\n    scoreLabel.value++;\n    scoreLabel.text = \"x\" + scoreLabel.value;\n  });\n\n  action(\"dangerous\", (d) => {\n    d.move(-ENEMY_SPEED, 0);\n  });\n\n  player.collides(\"dangerous\", (d) => {\n    if (isJumping) {\n      destroy(d);\n      // addKaboom(player.pos);\n      play(\"powerup\");\n    } else {\n      go(\"info\", {\n        score: scoreLabel.value,\n        time: timer.time.toFixed(2),\n        infoText: \"Game Over\",\n      });\n      play(\"hit\");\n      music.stop();\n    }\n  });\n\n  player.action(() => {\n    camPos(player.pos);\n    if (player.pos.y >= FALL_DEATH) {\n      go(\"info\", {\n        score: scoreLabel.value,\n        time: timer.time.toFixed(2),\n        infoText: \"Game Over\",\n      });\n      play(\"hit\");\n      music.stop();\n    }\n  });\n\n  player.collides(\"portal\", () => {\n    play(\"portal\");\n    music.stop();\n    if (parseInt(level + 1) < maps.length) {\n      go(\"game\", {\n        level: (level + 1) % maps.length,\n        score: scoreLabel.value,\n      });\n    } else {\n      go(\"info\", {\n        score: scoreLabel.value,\n        time: timer.time.toFixed(2),\n        infoText: \"You Win!\",\n      });\n    }\n\n    mouseClick(() => {\n      play(\"portal\");\n      music.stop();\n      if (parseInt(level + 1) < maps.length) {\n        go(\"game\", {\n          level: (level + 1) % maps.length,\n          score: scoreLabel.value,\n        });\n      } else {\n        go(\"info\", {\n          score: scoreLabel.value,\n          time: timer.time.toFixed(2),\n          infoText: \"You Win!\",\n        });\n      }\n    });\n  });\n\n  keyDown(\"left\", () => {\n    player.flipX(-1);\n    current_direction = directions.LEFT;\n    player.move(-MOVE_SPEED, 0);\n\n    up.pos.x = player.pos.x - up.width;\n    down.pos.x = player.pos.x - down.width;\n    left.pos.x = player.pos.x - left.width - 25;\n    right.pos.x = player.pos.x - 15;\n  });\n\n  keyDown(\"right\", () => {\n    player.flipX(1);\n    current_direction = directions.RIGHT;\n    player.move(MOVE_SPEED, 0);\n\n    up.pos.x = player.pos.x;\n    down.pos.x = player.pos.x;\n    left.pos.x = player.pos.x - 25;\n    right.pos.x = player.pos.x + 25;\n  });\n\n  player.action(() => {\n    if (player.grounded()) {\n      isJumping = false;\n    }\n  });\n\n  keyPress(\"up\", () => {\n    if (player.grounded()) {\n      isJumping = true;\n      player.jump(CURRENT_JUMP_FORCE);\n    }\n  });\n\n  keyPress(\"down\", () => {\n    player.weight = 3;\n  });\n\n  keyRelease(\"down\", () => {\n    player.weight = 1;\n  });\n  function spawnBullet(bulletpos) {\n    if (current_direction == directions.LEFT) {\n      bulletpos = bulletpos.sub(10, 0);\n    } else if (current_direction == directions.RIGHT) {\n      bulletpos = bulletpos.add(10, 0);\n    }\n    add([\n      sprite(\"injection\"),\n\t  scale(0.5),\n      pos(bulletpos),\n      origin(\"center\"),\n      \"bullet\",\n      {\n        bulletSpeed:\n          current_direction == directions.LEFT\n            ? -1 * BULLET_SPEED\n            : BULLET_SPEED,\n      },\n    ]);\n\n    play(\"shoot\", {\n      volume: 0.2,\n      detune: rand(-1200, 1200),\n    });\n  }\n\n  action(\"bullet\", (b) => {\n    b.move(b.bulletSpeed, 0);\n    if (b.pos.x < 0) {\n      destroy(b);\n    }\n  });\n\n  keyPress(\"space\", () => {\n    if (window.vaccine) {\n      spawnBullet(player.pos);\n    }\n  });\n\n  collides(\"bullet\", \"dangerous\", (b, d) => {\n    destroy(b);\n    destroy(d);\n    camShake(4);\n    play(\"explosion\", {\n      volume: 0.2,\n      detune: rand(0, 1200),\n    });\n  });\n\n  // if (isMobile || isTablet) {\n  // \tmouseClick(() => {\n  // \t\tlet position = mousePos();\n  // \t\tplayer.pos.x = position.x;\n  // \t\tplayer.pos.y = position.y;\n  // \t});\n  // }\n\n  mouseClick(() => {\n    if (player.grounded()) {\n      isJumping = true;\n      player.jump(CURRENT_JUMP_FORCE);\n    }\n  });\n\n  var isMobile = navigator.userAgent.match(/Mobile/i) != null;\n  var isTablet = navigator.userAgent.match(/Tablet/i) != null;\n\n  if (isMobile || isTablet) {\n    var playerMove = setInterval(() => {\n      player.move(MOVE_SPEED, 0);\n    }, 30);\n\n    let moveAuto = true;\n\n    mouseDblClick(() => {\n      if (moveAuto) {\n        clearInterval(playerMove);\n      } else {\n        playerMove = setInterval(() => {\n          player.move(MOVE_SPEED, 0);\n        }, 30);\n      }\n\n      moveAuto = !moveAuto;\n\n      up.pos.x = player.pos.x;\n      down.pos.x = player.pos.x;\n      left.pos.x = player.pos.x - 25;\n      right.pos.x = player.pos.x + 25;\n    });\n  }\n});\n\nscene(\"info\", ({ score, time, infoText, showInfo }) => {\n  if (showInfo == undefined) {\n    showInfo = true;\n  }\n\n  add([rect(width(), height()), color(0, 0, 0), layer(\"bg\")]);\n\n  add([\n    text(\"Maskio\", 14),\n    origin(\"center\"),\n    pos(width() / 2, 15),\n    color(rgb(0.98, 0.6, 0.01)),\n    layer(\"ui\"),\n  ]);\n\n  add([\n    text(infoText, 12),\n    origin(\"center\"),\n    pos(width() / 2, 35),\n    color(rgb(0.98, 0.6, 0.01)),\n    layer(\"ui\"),\n  ]);\n\n  add([\n    sprite(\"maskio\"),\n    origin(\"center\"),\n    pos(width() / 2, height() / 2 - 20),\n    scale(0.3),\n    layer(\"obj\"),\n  ]);\n  if (showInfo) {\n    add([\n      sprite(\"coin\"),\n      scale(0.3),\n      layer(\"obj\"),\n      pos(width() / 2 - 5, height() / 2 + 13),\n      origin(\"center\"),\n    ]);\n\n    add([\n      text(\"x\" + score),\n      origin(\"center\"),\n      pos(width() / 2 + 10, height() / 2 + 10),\n      color(rgb(0.98, 0.6, 0.0)),\n      layer(\"ui\"),\n      {\n        value: score,\n      },\n    ]);\n\n    add([\n      text(\"TIME: \" + time),\n      origin(\"right\"),\n      pos(width() / 2 - 27, height() / 2 + 10),\n      color(rgb(0.98, 0.6, 0.0)),\n      layer(\"ui\"),\n      {\n        value: score,\n      },\n    ]);\n  }\n\n  add([\n    text(\"Click up or hit 'space' to jump\", 8),\n    origin(\"center\"),\n    pos(width() / 2 + 10, height() / 2 + 30),\n    color(rgb(0.98, 0.6, 0.0)),\n    layer(\"ui\"),\n  ]);\n\n  if (isMobile || isTablet) {\n    add([\n      text(\"Double click to stop moving and get manual control.\", 8),\n      origin(\"center\"),\n      pos(width() / 2 + 10, height() / 2 + 45),\n      color(rgb(0.98, 0.6, 0.0)),\n      layer(\"ui\"),\n    ]);\n    add([\n      text(\"Click on the portal to go to the next level.\", 8),\n      origin(\"center\"),\n      pos(width() / 2 + 10, height() / 2 + 60),\n      color(rgb(0.98, 0.6, 0.0)),\n      layer(\"ui\"),\n    ]);\n  }\n\n  add([\n    text(\"Press 'space' or click to start!\", 8),\n    origin(\"center\"),\n    pos(width() / 2, height() - 15),\n    color(rgb(0.98, 0.6, 0.0)),\n    layer(\"ui\"),\n  ]);\n  if (showInfo) {\n    keyPress(\"space\", () => {\n      go(\"game\", { level: 0, score: 0 });\n    });\n\n    mouseClick(() => {\n      go(\"game\", { level: 0, score: 0 });\n    });\n  } else {\n    keyPress(\"space\", () => {\n      go(\"menu\");\n    });\n\n    mouseClick(() => {\n      go(\"menu\");\n    });\n  }\n});\n\nstart(\"menu\");\n"],
  "mappings": "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",
  "names": []
}
